
#include "shape.h"

// ALL GENERATED BY COPILOT
class sphere : public shape {
    // class definition
    private:
        point3 center;
        double radius;
    public:
        sphere() {}
        sphere(const point3& center, double radius)
            : center(center), radius(radius)
        {}

        point3 get_center() const { return center; }
        double get_radius() const { return radius; }

        bool intersection(const ray& r) const {
            vec3 oc = r.origin() - center;
            auto a = dot(r.direction(), r.direction());
            auto b = 2.0 * dot(oc, r.direction());
            auto c = dot(oc, oc) - radius*radius;
            auto discriminant = b*b - 4*a*c;
            return (discriminant >= 0);
        }
};
